on:
  push:
    tags:
    - v*

jobs:
  package:
    strategy:
      matrix:
        go-version: [1.17.x]
        platform: [macos-10.15, ubuntu-18.04, windows-2019]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Get version tag (unix)
        if: matrix.platform != 'windows-2019'
        id: version
        run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

      - name: Get version tag (windows)
        if: matrix.platform == 'windows-2019'
        id: versionw
        run: |
          $tag = $env:GITHUB_REF -replace "refs/tags/", ""
          echo "::set-output name=tag::$(echo $tag)"

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out the code
        uses: actions/checkout@v2

      # darwin
      - name: Build for darwin
        if: matrix.platform == 'macos-10.15'
        run: |
          make build-darwin

      - name: Upload darwin disk image
        if: matrix.platform == 'macos-10.15'
        uses: actions/upload-artifact@v2
        with:
          name: levy-inverter
          path: bin/levy-inverter

      # linux
      - name: Build for linux
        if: matrix.platform == 'ubuntu-18.04'
        run: |
          make build-linux

      - name: Upload linux tar.gz
        if: matrix.platform == 'ubuntu-18.04'
        uses: actions/upload-artifact@v2
        with:
          name: levy-inverter
          path: bin/levy-inverter

      # windows
      - name: Build for windows
        if: matrix.platform == 'windows-2019'
        run: |
          make build-windows

      - name: Upload windows zip
        if: matrix.platform == 'windows-2019'
        uses: actions/upload-artifact@v2
        with:
          name: levy-inverter
          path: bin/levy-inverter

  # release:
  #   runs-on: ubuntu-latest
  #   needs: package
  #   steps:
  #     - name: Get version tag
  #       id: version
  #       run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

  #     - name: Get changelog url
  #       id: changelog
  #       run: echo "${{ steps.version.outputs.tag }}---$(date +'%Y-%m-%d')" | sed -e 's/\.//g' | awk '{print "::set-output name=url::https://github.com/brandonwkipp/levy-inverter/blob/master/CHANGELOG.md#" $1}'

  #     - name: Create release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ steps.version.outputs.tag }}
  #         release_name: ${{ steps.version.outputs.tag }}
  #         body: Full changelog â‡’ [${{ steps.version.outputs.tag }}](${{ steps.changelog.outputs.url }})
  #         draft: true
  #         prerelease: false

  #     - name: Download all release pacakges
  #       uses: actions/download-artifact@v2

  #     - name: Attach darwin disk image
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: LevyInverter_${{ steps.version.outputs.tag }}_Darwin_x86_64.dmg/LevyInverter_${{ steps.version.outputs.tag }}_Darwin_x86_64.dmg
  #         asset_name: LevyInverter_${{ steps.version.outputs.tag }}_Darwin_x86_64.dmg
  #         asset_content_type: application/octet-stream

  #     - name: Attach linux tar.gz
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: LevyInverter_${{ steps.version.outputs.tag }}_Linux_x86_64.tar.gz/LevyInverter_${{ steps.version.outputs.tag }}_Linux_x86_64.tar.gz
  #         asset_name: LevyInverter_${{ steps.version.outputs.tag }}_Linux_x86_64.tar.gz
  #         asset_content_type: application/octet-stream

  #     - name: Attach windows zip
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: LevyInverter_${{ steps.version.outputs.tag }}_Windows_x86_64.zip/LevyInverter_${{ steps.version.outputs.tag }}_Windows_x86_64.zip
  #         asset_name: LevyInverter_${{ steps.version.outputs.tag }}_Windows_x86_64.zip
  #         asset_content_type: application/octet-stream